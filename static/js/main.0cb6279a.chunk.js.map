{"version":3,"sources":["style/Post.module.css","style/Profile.module.css","style/NewPost.module.css","style/Header.module.css","style/PostThumbnail.module.css","style/FancyFont.module.css","style/App.module.css","style/Navbar.module.css","style/Home.module.css","utils/publicURL.js","components/Header.js","components/Navbar.js","utils/timespan.js","components/PostThumbnail.js","components/Post.js","components/Home.js","components/Explore.js","utils/uniqueId.js","components/FileLoader.js","components/NewPost.js","components/Activity.js","utils/FancyFont.js","components/Profile.js","utils/initialStore.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","assetPath","startsWith","process","Header","className","css","header","headerItem","src","publicURL","alt","Navbar","props","navList","navURL","map","item","toLowerCase","handleNavChange","page","onNavChange","NavButton","navItem","onClick","name","url","navbar","i","date","seconds","Math","floor","Date","interval","plural","PostThumbnail","square","content","image","publicUrl","Post","useState","toggleComment","setToggleComment","comment","setComment","post","user","userPhoto","photo","id","userName","postPhoto","like","likes","self","postId","onUnlike","onLike","count","comments","desc","userId","text","timespan","datetime","addComment","maxLength","value","rows","placeholder","onChange","e","target","textarea","style","window","getComputedStyle","height","lineHeight","parseInt","fontSize","scrollHeight","numRow","round","max","handleCommentHeight","type","event","trim","length","onComment","preventDefault","Home","store","posts","sort","a","b","findUser","users","findLikes","currentUserId","findComments","find","likeThisPost","filter","some","prefix","valueOf","toString","milliseconds","start","getTime","sleep","FileLoader","handleDragEnter","bind","handleDrop","handleDragOver","handleDragLeave","stopPropagation","this","onDrop","dragTargetSaved","onDragEnter","dataTransfer","types","includes","onDragOver","onDragLeave","child","React","Children","only","children","cloneElement","PureComponent","NewPost","dragging","setDragging","setDesc","setPhoto","error","setError","message","files","file","size","match","reader","FileReader","onloadend","result","readAsDataURL","dropArea","join","actions","onSubmit","onPageChange","FancyFont","classSelector","bold","lightBold","semiBold","Profile","findPosts","follows","followers","follow","followerId","followings","findFollows","stats","container","userTitle","userBio","bio","stat","statItem","thumbnail","email","App","setPage","initStore","setStore","addLike","newLike","toISOString","concat","removeLike","unlikedList","newComment","addPost","description","newPost","uniqueId","Explore","Activity","renderMain","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Component","Comp","prop","func","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cb6279a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1f5Ue\",\"user\":\"Post_user__3Fuvd\",\"like\":\"Post_like__1Whsg\",\"comments\":\"Post_comments__3AVFq\",\"timespan\":\"Post_timespan__1AcWR\",\"userName\":\"Post_userName__2vi0_\",\"userPhoto\":\"Post_userPhoto__pLV-c\",\"postPhoto\":\"Post_postPhoto__3MpLD\",\"addComment\":\"Post_addComment__vMX39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__3yCA5\",\"user\":\"Profile_user__V98W6\",\"userTitle\":\"Profile_userTitle__2PCAX\",\"userBio\":\"Profile_userBio__1qg-Y\",\"userPhoto\":\"Profile_userPhoto__OBUPy\",\"userName\":\"Profile_userName__3nyTB\",\"stats\":\"Profile_stats__1P_Fv\",\"statItem\":\"Profile_statItem__249-M\",\"thumbnail\":\"Profile_thumbnail__1kJO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"NewPost_photo__2TxAx\",\"dropArea\":\"NewPost_dropArea__1JfvG\",\"dragging\":\"NewPost_dragging__Laegi\",\"message\":\"NewPost_message__32Uyq\",\"image\":\"NewPost_image__1FMyO\",\"desc\":\"NewPost_desc__1TuWU\",\"actions\":\"NewPost_actions__1n3_u\",\"error\":\"NewPost_error__1nPEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3jAbp\",\"headerItem\":\"Header_headerItem__33Rso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"PostThumbnail_square__IHZki\",\"content\":\"PostThumbnail_content__1Ki1z\",\"image\":\"PostThumbnail_image__2aRvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"FancyFont_bold__MMhfQ\",\"lightBold\":\"FancyFont_lightBold__--AsV\",\"semiBold\":\"FancyFont_semiBold__2lmo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1pnDD\",\"content\":\"App_content__3rpHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2D0PJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Home_post__1BEFB\"};","// convert absolute path to PUBLIC_URL\r\nexport default (assetPath) => {\r\n    // address photo uploader\r\n    const publicUrl = assetPath.startsWith('data:image') ? \r\n        '' : process.env.PUBLIC_URL\r\n    return publicUrl + assetPath;\r\n}","import React from 'react';\r\nimport css from 'style/Header.module.css';\r\nimport publicURL from 'utils/publicURL';\r\n\r\nexport default Header;\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={css.header}>\r\n            <div className={css.headerItem}>\r\n                <button>\r\n                    <img src={publicURL(\"/assets/camera.svg\")} alt=\"camera\"/>\r\n                </button>\r\n            </div>\r\n            <div className={css.headerItem}>\r\n                <img src={publicURL(\"/assets/logo.png\")} alt=\"logo\"/>\r\n            </div>\r\n            <div className={css.headerItem}>\r\n                <button>\r\n                    <img src={publicURL(\"/assets/message.svg\")} alt=\"message\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport publicURL from 'utils/publicURL'\r\nimport css from 'style/Navbar.module.css'\r\n\r\nexport default Navbar;\r\n\r\nfunction Navbar(props) {\r\n    // nav items and url\r\n    const navList = [\r\n        \"Home\", \"Explore\", \"NewPost\", \"Activity\", \"Profile\",\r\n    ];\r\n    const navURL = navList.map(item => `/assets/${item.toLowerCase()}.svg`);\r\n\r\n    // lifting up state (clicked page) to App\r\n    function handleNavChange(page) {\r\n        if (props.onNavChange) return props.onNavChange(page.toLowerCase());\r\n    }\r\n\r\n    // navigation buttons\r\n    function NavButton(props) {\r\n        return (\r\n            <div className={css.navItem}>\r\n                <button onClick={() => handleNavChange(props.name)}>\r\n                    <img src={publicURL(props.url)} alt={props.name}/>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // render navbar\r\n    return (\r\n        <nav className={css.navbar}>\r\n            {navURL.map((url, i) => \r\n                <NavButton url={url} name={navList[i]} key={url}/>\r\n            )}\r\n        </nav>\r\n    );\r\n}","// return time elapsed \nexport default (date) => {\n    var seconds = Math.floor((new Date() - new Date(date)) / 1000);\n\n    var interval = Math.floor(seconds / 31556926);\n  \n    if (interval >= 1) {\n      return interval + \" year\" + plural(interval);\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      return interval + \" month\" + plural(interval);\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      return interval + \" day\" + plural(interval);\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      return interval + \" hour\" + plural(interval);\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      return interval + \" minute\" + plural(interval);\n    }\n    return Math.floor(seconds) + \" second\" + plural(seconds);\n}\n\nfunction plural(interval) {\n  return (interval >= 2) ? \"s\":\"\";\n}","import React from 'react';\nimport css from 'style/PostThumbnail.module.css';\nimport publicUrl from 'utils/publicURL';\n\n// Adjusted version: use to return all kinds of Squares\nfunction PostThumbnail(props) {\n  return (\n    <div className={css.square}>\n      <div className={css.content}>\n        <img className={css.image} src={publicUrl(props.src)} alt={props.alt}/>\n      </div>\n    </div>\n  );\n}\n\nexport default PostThumbnail;\n","import css from 'style/Post.module.css';\r\n\r\nimport publicURL from 'utils/publicURL';\r\nimport timespan from 'utils/timespan';\r\nimport PostThumbnail from './PostThumbnail';\r\nimport React, {useState} from 'react';\r\n\r\nexport default Post;\r\n\r\n/*\r\nPost.props = {\r\n    user: {\r\n\t\tid:\"judy\",\r\n\t\tphoto:\"/assets/user1.png\",\r\n\t},\r\n\tpost: {\r\n\t\tid:\"post-1\",\r\n        userId:\"judy\",\r\n        photo:\"/assets/post1.png\",\r\n        desc:\"#zootopia #excited\",\r\n\t\tdatetime: \"2020-02-09T22:45:28Z\"\r\n\t},\r\n\tlikes: {\r\n\t\tself: true,\r\n\t\tcount:1\r\n\t},\r\n\tcomments: [\r\n\t\t{\r\n            userId:\"nick\",\r\n            text:\"Welcome to Zootopia!\"\r\n        },\r\n        {\r\n            userId:\"judy\",\r\n            text:\"Thanks!😁Looking forward to meeting you!\"\r\n        }\r\n\t]\r\n} \r\n*/\r\n\r\nfunction Post(props) {\r\n    // state hook\r\n    const [toggleComment, setToggleComment] = useState(false);\r\n    const [comment, setComment] = useState(\"\");\r\n    \r\n    function handleLikeChange(self, postId) {\r\n        if (!self) {\r\n            // if currently unlike => like\r\n            return props.onLike(postId);\r\n        } else {\r\n            // if ucrrently liked => unlike\r\n            return props.onUnlike(postId);\r\n        }\r\n    }\r\n\r\n    function handleAddComment() {\r\n        setToggleComment(!toggleComment);\r\n    }\r\n\r\n    function handleCommentHeight(textarea) {\r\n        const style = window.getComputedStyle(textarea);\r\n        textarea.style.height = 0;\r\n        // line height & scroll height\r\n        let lineHeight = (style.lineHeight===\"normal\") ?\r\n            parseInt(style.fontSize) : parseInt(style.lineHeight);\r\n        const scrollHeight = textarea.scrollHeight;\r\n        // change height\r\n        const numRow = Math.round(\r\n            Math.max(1, scrollHeight / lineHeight)\r\n        );\r\n        const fontRatio = 56/48; // This ratio is the \"mysterious\" line spacinig-ratio\r\n        textarea.style.height = numRow * lineHeight * fontRatio + \"px\";\r\n    }\r\n\r\n    function handleSubmitComment(event) {\r\n        // validation\r\n        if (comment.trim().length == 0) {\r\n\r\n        } else {\r\n            // set state\r\n            props.onComment(props.post.id, comment);\r\n            // reset comment\r\n            setToggleComment(false);\r\n            setComment(\"\");\r\n        }\r\n        // disable refresh\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className={css.post}>\r\n            <div className={css.user}>\r\n                <img className={css.userPhoto} src={publicURL(props.user.photo)} alt={props.user.id}/>\r\n                <strong className={css.userName}>{props.user.id}</strong>\r\n            </div>\r\n                \r\n            {/* <img className={css.postPhoto} src={publicURL(props.post.photo)} alt=\"Photo\"/> */}\r\n\r\n            <div className={css.postPhoto}>\r\n                <PostThumbnail src={props.post.photo} alt=\"Photo\"/>\r\n            </div>\r\n\r\n            <div className={css.like}>\r\n                <button>\r\n                    <img src={(props.likes.self) ? publicURL(\"/assets/unlike.svg\"):publicURL(\"/assets/like.svg\")}\r\n                        onClick={()=>handleLikeChange(props.likes.self, props.post.id)}/>\r\n                </button>\r\n                <button>\r\n                    <img src={publicURL(\"/assets/comment.svg\")}\r\n                        onClick={handleAddComment}/>\r\n                </button>\r\n                <strong>{`${props.likes.count} like${(props.likes.count>=2) ? \"s\":\"\"}`}</strong>\r\n            </div>\r\n\r\n            <div className={css.comments}>\r\n                <ul>\r\n                    {props.post.desc!='' &&\r\n                        <li><strong>{props.post.userId}</strong> {props.post.desc}</li>\r\n                    }\r\n                    {props.comments.map((comment, i) => (\r\n                        <li key={i}>\r\n                            <strong>{comment.userId}</strong> {comment.text}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={css.timespan}>\r\n                {timespan(props.post.datetime)} ago\r\n            </div>\r\n\r\n            {toggleComment &&\r\n            <form className={css.addComment}>\r\n                {/* <input type=\"text\"\r\n                    maxLength = \"300\"\r\n                    value={comment}\r\n                    placeholder=\"Add a new comment...\"\r\n                    onChange={e => setComment(e.target.value)}/> */}\r\n                <textarea\r\n                    maxLength = \"300\"\r\n                    value = {comment}\r\n                    rows = \"1\"\r\n                    placeholder = \"Add a new comment...\"\r\n                    onChange = {e => {\r\n                        setComment(e.target.value); \r\n                        handleCommentHeight(e.target);\r\n                    }}\r\n                />\r\n                <button type=\"submit\" onClick={handleSubmitComment}>Post</button>\r\n            </form>\r\n            }\r\n        </div>\r\n    );\r\n}","import css from 'style/Home.module.css';\r\nimport publicURL from 'utils/publicURL';\r\nimport Post from './Post'\r\nimport React from 'react';\r\n\r\nexport default Home;\r\n\r\n/* Data Structure\r\nPost.props = {\r\n    user: {\r\n\t\tid:\"judy\",\r\n\t\tphoto:\"/assets/user1.png\",\r\n\t},\r\n\tpost: {\r\n\t\tid:\"post-1\",\r\n        userId:\"judy\",\r\n        photo:\"/assets/post1.png\",\r\n        desc:\"#zootopia #excited\",\r\n\t\tdatetime: \"2020-02-09T22:45:28Z\"\r\n\t},\r\n\tlikes: {\r\n\t\tself: true,\r\n\t\tcount:1\r\n\t},\r\n\tcomments: [\r\n\t\t{\r\n            userId:\"nick\",\r\n            text:\"Welcome to Zootopia!\"\r\n        },\r\n        {\r\n            userId:\"judy\",\r\n            text:\"Thanks!😁Looking forward to meeting you!\"\r\n        }\r\n\t]\r\n} \r\n*/\r\n\r\nfunction Home(props) {\r\n    const store = props.store;\r\n\r\n    return (\r\n    <div>{\r\n        store.posts.sort((a,b) => new Date(b.datetime) - new Date(a.datetime))\r\n        .map(post => \r\n            <Post key = {post.id}\r\n                user = {findUser(store.users, post)}\r\n                likes = {findLikes(store.likes, post, store.currentUserId)}\r\n                post = {post}\r\n                comments = {findComments(store.comments, post)}\r\n                onLike = {props.onLike}\r\n                onUnlike = {props.onUnlike}\r\n                onComment = {props.onComment}\r\n            />\r\n        )\r\n    }</div>\r\n    );\r\n}\r\n\r\nfunction findUser(users, post) {\r\n    return users.find(user => user.id === post.userId);\r\n}\r\n\r\nfunction findLikes(likes, post, currentUserId) {\r\n    const likeThisPost = likes.filter(like => like.postId === post.id);\r\n    return {\r\n        self: likeThisPost.some(like => like.userId === currentUserId),\r\n        count: likeThisPost.length,\r\n    };\r\n}\r\n\r\n// sorted by time\r\nfunction findComments(comments, post) {\r\n    return comments.filter(comment => comment.postId === post.id)\r\n        .sort((a,b) => new Date(a.datetime) - new Date(b.datetime));\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <strong>Explore</strong>\r\n    );\r\n}","function sleep(milliseconds) {\n\tvar start = new Date().getTime();\n\tfor (var i = 0; i < 1e7; i++) {\n\t\tif ((new Date().getTime() - start) > milliseconds){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// Q: avoid same millisecond id\nexport default (prefix) => { // TODO use shortid \n\tlet id = new Date().valueOf().toString(36);\n\tsleep(1);// wait for one millisecond\n\treturn (prefix ? prefix + id : id);\n};","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nclass FileLoader extends PureComponent {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.handleDragEnter = this.handleDragEnter.bind(this);\n\t\tthis.handleDrop = this.handleDrop.bind(this);\n\t\tthis.handleDragOver = this.handleDragOver.bind(this);\n\t\tthis.handleDragLeave = this.handleDragLeave.bind(this);\n\t}\n\thandleDrop(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDrop){\n\t\t\tthis.props.onDrop(e);\n\t\t}\n\t}\n\thandleDragEnter(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis.dragTargetSaved=e.target;\n\t\tif (this.props.onDragEnter){\n\t\t\tthis.props.onDragEnter(e);\n\t\t}\n\t}\n\thandleDragOver(e){\n\t\tif (e.dataTransfer.types.includes('Files')===false){\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragOver){\n\t\t\tthis.props.onDragOver(e);\n\t\t}\n\t}\n\thandleDragLeave(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragLeave &&  this.dragTargetSaved===e.target){\n\t\t\tthis.props.onDragLeave(e);\n\t\t}\n\t}\n\n\trender () {\n\t\tlet child = React.Children.only(this.props.children);\n\t\treturn  React.cloneElement(child,\n\t\t\t{\t\n\t\t\t\tonDragEnter: this.handleDragEnter,\n\t\t\t\tonDragOver: this.handleDragOver,\n\t\t\t\tonDragLeave: this.handleDragLeave,\n\t\t\t\tonDrop: this.handleDrop\n\t\t\t});\n\t}\n}\n\nFileLoader.propTypes = {\n\tonDrop:PropTypes.func,\n\tonDragEnter:PropTypes.func,\n\tonDragOver:PropTypes.func,\n\tonDragLeave:PropTypes.func,\n\tchildren:PropTypes.element.isRequired,\n};\n\nexport default FileLoader;","import React, {useState} from 'react';\r\nimport css from 'style/NewPost.module.css';\r\nimport uniqueId from 'utils/uniqueId';\r\nimport FileLoader from './FileLoader';\r\n\r\nexport default NewPost;\r\n\r\nfunction NewPost(props) {\r\n    const [dragging, setDragging] = useState(false); // to show a dragging effect\r\n    const [desc, setDesc] = useState('');\r\n    const [photo, setPhoto] = useState(null);\r\n    const [error, setError] = useState(''); // to show an error message\r\n  \r\n    function handleFileDragEnter(e){\r\n        setDragging(true);\r\n    }\r\n    function handleFileDragLeave(e){\r\n        setDragging(false);\r\n    }\r\n    function handleFileDrop(e){\r\n        if (e.dataTransfer.types.includes('Files')===false){\r\n            // return;\r\n        } else if (e.dataTransfer.files.length>=1){\r\n            let file = e.dataTransfer.files[0];\r\n            if (file.size>1000000){// larger than 1 MB\r\n                // return;\r\n            } else if (file.type.match(/image.*/)){\r\n                let reader = new FileReader();\t\t\t\r\n                reader.onloadend = (e) => {\r\n                    // TODO: call setPhoto with e.target.result (this is a Base64 image string)\r\n                    setPhoto(e.target.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            }\r\n        }\r\n        setDragging(false);\r\n    }\r\n    function handleDescChange(e){\r\n        // TODO: call setDesc\r\n        setDesc(e.target.value);\r\n    }\r\n    function handleSubmit(e){\r\n        // TODO:\r\n        // 1. Prevent default behavior\r\n        e.preventDefault();\r\n        // 2. Show error msg if failed and exit\r\n        if (photo === null) {\r\n            setError('No image detected...');\r\n            return;\r\n        }\r\n        // 3. Call the storage update function passed from the parent\r\n        props.onSubmit(photo, desc);\r\n        // 4. Clear error msg\r\n        // setError('');\r\n        props.onPageChange('home');\r\n    }\r\n    function handleCancel(){\r\n        // TODO: Notify the parent about the cancellation\r\n        setPhoto(null);\r\n        setDesc('');\r\n        setError('');\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={css.photo}>\r\n                {!photo ? \r\n                    <div className={css.message}>Drop your image</div>:\r\n                    <img src={photo} alt=\"New Post\"/>\r\n                }\r\n                <FileLoader\r\n                    onDragEnter={handleFileDragEnter}\r\n                    onDragLeave={handleFileDragLeave}\r\n                    onDrop={handleFileDrop}\r\n                >\r\n                    <div className={[css.dropArea, dragging?css.dragging:null].join(' ')}></div>\r\n                </FileLoader>\r\n            </div>\r\n            \r\n            <div className={css.desc} >\r\n                {/* TODO: add textarea */}\r\n                <textarea value={desc} onChange={handleDescChange} rows={3}/>\r\n            </div>\r\n            <div className={css.error}>\r\n                {/* TODO: show error message */}\r\n                {error!=='' && error}\r\n            </div>\r\n            <div className={css.actions}>\r\n            <button onClick={handleCancel}>Cancel</button>\r\n            <button onClick={handleSubmit}>Share</button>          \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <strong>Acitivity</strong>\r\n    );\r\n}","import css from 'style/FancyFont.module.css';\r\n\r\nexport default function FancyFont(props) {\r\n    let className;\r\n    return (\r\n        <span className={`\r\n            ${classSelector(props.style)} ${props.className}\r\n        `}>\r\n            {props.children}\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction classSelector(style) {\r\n    switch (style) {\r\n        case \"bold\": return css.bold;\r\n        case \"lightBold\": return css.lightBold;\r\n        case \"semiBold\": return css.semiBold;\r\n        default: return null;\r\n    }\r\n}","import css from 'style/Profile.module.css';\r\nimport React from 'react';\r\nimport PostThumbnail from './PostThumbnail';\r\nimport publicURL from 'utils/publicURL';\r\nimport FancyFont from 'utils/FancyFont';\r\n\r\nexport default Profile;\r\n\r\n/* Profile Structure\r\nProfile.state = {\r\n    user: {\r\n        id:\"judy\",\r\n        email:\"judy@bc.edu\",\r\n        photo:\"/assets/user1.png\",\r\n        name: \"Judy Hopps\",\r\n        bio:\"The first rabbit officer of the Zootopia Police Department. \r\n            Judy is determined to make the world a better place while breaking \r\n            preconceptions about other species.\",    \r\n    },\r\n    follows: {\r\n        followers: [\r\n            \"flash\",\r\n            ...\r\n        ],\r\n        followings: [\r\n            \"nick\",\r\n            ...\r\n        ],\r\n    },\r\n    posts: [\r\n        {\r\n            id:\"post-4\",\r\n            userId:\"judy\",\r\n            photo:\"/assets/post4.png\",\r\n            desc:\"Just trying to make a #friend\",\r\n            datetime: \"2020-02-06T22:45:28Z\",\r\n        },\r\n        ...\r\n    ],\r\n}\r\n*/\r\n\r\nfunction Profile(props) {\r\n    const user = findUser(props.store);\r\n    const posts = findPosts(props.store);\r\n    const follows = findFollows(props.store);\r\n\r\n    const stats = [\r\n        {name: \"posts\", value: posts.length},\r\n        {name: \"followers\", value: follows.followers.length},\r\n        {name: \"followings\", value: follows.followings.length},\r\n    ];\r\n\r\n    if (false) console.log(user, posts, follows);\r\n\r\n    return (<div className={css.container}>\r\n        <div className={css.user}>\r\n            <div className={css.userTitle}>\r\n                <img className={css.userPhoto} src={publicURL(user.photo)} alt=\"photo\"/>\r\n                <FancyFont className={css.userName} style=\"lightBold\">{user.id}</FancyFont>\r\n            </div>\r\n            <div className={css.userBio}>\r\n                <FancyFont style=\"semiBold\">{user.name}</FancyFont> <br/>\r\n                <FancyFont style=\"lightBold\">{user.bio}</FancyFont>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={css.stats}>\r\n            {\r\n                stats.map(stat => (\r\n                    <div className={css.statItem} key={stat.name}>\r\n                        <span>{stat.value}</span> <br/>\r\n                        <span>{stat.name}</span>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n        <div className={css.thumbnail}>\r\n            {\r\n                posts.map(post => (\r\n                    <PostThumbnail src={post.photo} alt={post.id} key={post.id}/>\r\n                ))\r\n            }\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nfunction findUser(store) {\r\n    return store.users.find(user => user.id === store.currentUserId);\r\n}\r\n\r\nfunction findPosts(store) {\r\n    return store.posts.filter(post => post.userId === store.currentUserId);\r\n}\r\n\r\nfunction findFollows(store) {\r\n    return ({\r\n        followers: store.followers\r\n            .filter(follow => follow.userId === store.currentUserId)\r\n            .map(follow => follow.followerId),\r\n        followings: store.followers\r\n            .filter(follow => follow.followerId === store.currentUserId)\r\n            .map(follow => follow.userId),\r\n    });\r\n}","/* sample data store*/\nexport default { \n    currentUserId: \"judy\",\n    users:[\n        {\n            id:\"judy\",\n            email:\"judy@bc.edu\",\n            photo:\"/assets/user1.png\",\n            name: \"Judy Hopps\",\n            bio:\"The first rabbit officer of the Zootopia Police Department. Judy is determined to make the world a better place while breaking preconceptions about other species.\",\n            \n        },\n        {\n            id:\"nick\",\n            email:\"nick@bc.edu\",\n            photo:\"/assets/user2.png\",\n            name:\"Nick Wilde\",\n            bio:\"Nick is a charming, small-time, con artist fox with a big mouth and a lot of opinions. But when a rabbit cop outsmarts him, he finds himself actually helping her solve a mystery.\"\n        },\n\n        {\n            id:\"flash\",\n            email:\"flash@bc.edu\",\n            photo:\"/assets/user3.png\",\n            name: \"Flash Slothmore\",\n            bio:\"Flash is a male three-toed sloth and a supporting character in Zootopia. He works at the Department of Mammal Vehicles.\",\n            \n        }\n    ],\n    followers:[\n        {\n            userId:\"nick\",\n            followerId:\"judy\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"nick\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"flash\"\n        }\n    ],\n    posts:[\n        {   \n            id:\"post-1\",\n            userId:\"judy\",\n            photo:\"/assets/post1.png\",\n            desc:\"#zootopia #excited\",\n            datetime: \"2020-02-09T22:45:28Z\",   \n        },\n        {\n            id:\"post-2\",\n            userId:\"nick\",\n            photo:\"/assets/post2.png\",\n            desc:\"#happy #selfie with Judy\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-3\",\n            userId:\"flash\",\n            photo:\"/assets/post3.png\",\n            desc:\"Don't worry I got this\",\n            datetime: \"2020-02-03T22:45:28Z\",\n        },\n        {\n            id:\"post-4\",\n            userId:\"judy\",\n            photo:\"/assets/post4.png\",\n            desc:\"Just trying to make a #friend\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-5\",\n            userId:\"judy\",\n            photo:\"/assets/post5.png\",\n            desc:\"I am now the first rabbit officer!\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-6\",\n            userId:\"judy\",\n            photo:\"/assets/post6.png\",\n            desc:\"Having #goodtimes with folks here\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n    ],\n    comments:[\n        {\n            userId:\"nick\",\n            postId:\"post-1\",\n            text:\"Welcome to Zootopia!\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            text:\"Thanks!😁Looking forward to meeting you!\", \n            datetime:\"2020-02-09T22:52:01Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            text:\"Looking good you two! 🐰🦊\", \n            datetime:\"2020-02-09T22:54:20Z\"\n        }\n    ],\n    likes:[\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            datetime:\"2020-02-09T22:50:40Z\"\n        },\n        {\n            userId:\"nick\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:54:20Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-3\",\n            datetime:\"2020-02-09T22:53:40Z\"\n        }\n    ]\n}\n\n","// style\nimport 'index.css';\nimport css from 'style/App.module.css';\n// header and navbar\nimport Header from './Header';\nimport Navbar from './Navbar';\n// main page\nimport Home from './Home';\nimport Explore from './Explore';\nimport NewPost from './NewPost';\nimport Activity from './Activity';\nimport Profile from './Profile';\n// others\nimport React, {useState} from 'react';\nimport uniqueId from 'utils/uniqueId';\n// data\nimport initStore from 'utils/initialStore';\n\n\nfunction App(props) {\n    const [page, setPage] = useState(\"home\");\n    const [store, setStore] = useState(initStore);\n\n    // debugger\n    if (false) console.log(page); // page\n    if (false) console.log(store); // store\n\n    // keep these functions in App:\n    // stay in scope of states\n    function renderMain(page) {\n        switch(page.toLowerCase()) {\n            case \"home\": \n                return <Home store={store}\n                onLike={addLike} onUnlike={removeLike}\n                onComment={addComment}/>;\n            case \"explore\": \n                return <Explore />;\n            case \"newpost\": \n                return <NewPost onSubmit={addPost} onPageChange={setPage}/>;\n            case \"activity\": \n                return <Activity />;\n            case \"profile\": \n                return <Profile store={store}/>;\n            default: \n                return null;\n        }\n    }\n\n    function addLike(postId) {\n        const newLike = {\n            userId: store.currentUserId,\n            postId: postId,\n            datetime: new Date().toISOString(),\n        };\n        \n        setStore({\n            ...store,\n            likes: store.likes.concat(newLike) \n        });\n    }\n    \n    function removeLike(postId) {\n        const unlikedList = store.likes\n            .filter(like => !(like.userId===store.currentUserId && like.postId===postId));\n        setStore({\n            ...store,\n            likes: unlikedList,\n        });\n    }\n\n    function addComment(postId, text) {\n        const newComment = {\n            userId: store.currentUserId,\n            postId: postId,\n            text: text,\n            datetime: new Date().toISOString(),\n        };\n        setStore({\n            ...store,\n            comments: store.comments.concat(newComment),\n        });\n    }\n\n    function addPost(photo, description) {\n        const newPost = {\n            id: uniqueId(\"post-\"),\n            userId: store.currentUserId,\n            photo: photo,\n            desc: description,\n            datetime: new Date().toISOString(),\n        };\n        setStore({\n            ...store,\n            posts: store.posts.concat(newPost),\n        });\n    }\n\n    return(\n        <div className={css.container}>\n            <Header/>\n            <div className={css.content}>\n                {renderMain(page)}\n            </div>\n            <Navbar onNavChange={setPage}/>\n        </div>\n    );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { renderIntoDocument } from 'react-dom/test-utils';\n\n\n// test functions\nclass Test extends React.Component {\n  constructor(props) {\n    super (props);\n    this.value = \"Hello World!\";\n    this.call = this.call.bind(this);\n  }\n\n  call() {\n    console.log(this.value);\n  }\n\n  render() {\n    return (\n      <Comp func={this.call}/>\n    );\n  }\n}\n\nfunction Comp(prop) {\n  prop.func();\n  return null;\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}